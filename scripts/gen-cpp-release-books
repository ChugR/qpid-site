#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from generate import *

import uuid
from xml.etree import ElementTree

def gen_books(release, source_dir, output_dir):
    input_dir = join(source_dir, "doc", "book")

    stylesheet = """<?xml version='1.0'?>
    <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
    <xsl:import href="http://docbook.sourceforge.net/release/xsl/current/xhtml/chunk.xsl"/>
    </xsl:stylesheet>"""

    write(join(input_dir, "xsl", "html-custom.xsl"), stylesheet)

    call("make -C {} clean all", input_dir)

    cpp_broker_input_dir = join(input_dir, "build", "AMQP-Messaging-Broker-CPP-Book")
    cpp_broker_output_dir = join(output_dir, "cpp-broker")

    remove(cpp_broker_output_dir)

    copy(join(cpp_broker_input_dir, "html"), join(cpp_broker_output_dir, "book"))

    copy(join(cpp_broker_input_dir, "pdf", "AMQP-Messaging-Broker-CPP-Book.pdf"),
         join(cpp_broker_output_dir, "cpp-broker-book.pdf"))

    output_dirs = [cpp_broker_output_dir]

    for dir in output_dirs:
        for path in find(dir, "*.html"):
            tree = ElementTree.parse(path)
            elem = tree.find(".//{http://www.w3.org/1999/xhtml}body")

            elem.tag = "div"
            elem.set("class", "docbook")

            remove_namespace(elem, "http://www.w3.org/1999/xhtml")

            # A hack to preserve docbook's empty anchors in an
            # IE-compatible way

            target = str(uuid.uuid4())

            for a in tree.iter("a"):
                if a.text is None:
                    a.text = target

            content = ElementTree.tostring(elem)

            content = content.replace(target, "")

            write("{}.in".format(path), content)
            remove(path)

# From http://homework.nwsnet.de/releases/45be/
def remove_namespace(doc, namespace):
    """Remove namespace in the passed document in place."""
    ns = u'{%s}' % namespace
    nsl = len(ns)
    for elem in doc.getiterator():
        if elem.tag.startswith(ns):
            elem.tag = elem.tag[nsl:]

## Now do stuff ##

release, issues_release, source_release, release_dir, checkout_dir = setup_release_script()
source_dir = export_release("cpp", source_release, checkout_dir)

gen_books(release, source_dir, release_dir)

notice("Books generated")
